1.在 xv6 存储库中有一个文件 user/call.c。使用make fs.img指令编译并在User/call.asm中生成程序的可读汇编版本。call.asm 的源代码包含函数 g、函数 f 和 main 函数。

2.哪个寄存器保存了函数参数，例如，在main调用printf的过程中，哪个寄存器保存了13？
答：通常为a0~a2这三个寄存器，在 main 函数调用 printf 函数的过程中，参数 13 被存储在了寄存器 a2 中。

3.main在哪里调用f？f在哪里调用g？
答：在这里编译器做出了优化，省略了显式调用f和g的过程，观察main函数，其直接预先计算好了f(8)+1的结果，记录在0x26的地址中；在f函数中，同样也做出了优化，其中0x14~0x16为g函数调用过程。

4.printf函数的地址在哪里？
答：通过0x30、0x34这两行指令推测出地址，跳转到 ra+1536 的位置，此时 ra 的值即为 pc 的值，即(0x30+0x0+1536)，转化为16进制为0x630。

5.在main函数中，寄存器ra的值在jalr后变为了什么？
答：0x38，即printf 函数的返回地址。

6.运行下列代码：

答：输出结果为：He110 World。

7.求下列语句中y的值

答：printf的format字符串在寄存器a0, 3在寄存器a1, 所以当试图print y的时候, 留在寄存器a2的某个随机值就会被print出来。